// Generated by CoffeeScript 1.10.0

/*
 * Модуль юзер -> настройки
 */

(function() {
  var slice = [].slice;

  (function($, window) {
    var userOptions;
    userOptions = (function() {
      userOptions.prototype.defaults = {
        date: '00.00.0000'
      };

      function userOptions(el, options) {
        var self;
        this.$el = $(el);
        this.elID = this.$el.attr('id');
        options = jQuery.parseJSON(this.$el.find('#edit_new_os_dop_param_json').html());
        if (options === null) {
          $(el).html($('<span/>', {
            css: {
              'color': 'rgb(255, 130, 130);'
            },
            html: 'блок редактирования доп. инфо учёта не доступен в режиме создания пользователей'
          }));
          return;
        } else {
          $(el).html($('<div/>', {
            id: 'preloader_block'
          }));
        }
        this.options = $.extend({}, this.defaults, options);
        console.log(this.options);

        /*
         * добавление полей
         */
        self = this;
        new sendAjax('get_compensations_row', {
          user_id: self.options.id,
          url: 'http://' + window.location.hostname + '/os/?page=user_api'
        }, function(response) {
          self.compensation = response.data;
          return self.init();
        });
      }

      userOptions.prototype.init = function() {
        var tbl;
        $('#' + this.elID).html('');
        $('#' + this.elID).append(tbl = $('<table/>', {
          'id': 'userOptionsModule'
        }));
        tbl.append(this.general_tbl());
        tbl.append(this.salary_tbl());
        return tbl.append(this.compensation_tbl());
      };

      userOptions.prototype.create_compensation_row = function(data) {
        var tr;
        tr = $('<tr/>').data(data);
        tr.append($('<td/>', {
          html: data.name
        }));
        tr.append($('<td/>', {
          html: data.val
        }));
        tr.append($('<td/>', {
          "class": 'delete_td',
          'html': 'x',
          click: function() {
            return new sendAjax('delete_compensation_row', {
              id: data.id,
              url: 'http://' + window.location.hostname + '/os/?page=user_api'
            }, function() {
              return tr.remove();
            });
          }
        }));
        return tr;
      };

      userOptions.prototype.compensation_tbl = function() {
        var data, i, j, len, ref, rowData, self, tbl, tr;
        self = this;
        tbl = [];
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Ежемесячные компенсации '
        }));
        tr.append($('<td/>'));
        tr.append($('<td/>'));
        data = [
          {
            id: 0,
            name: 'Телефон',
            val: 850.00
          }, {
            id: 1,
            name: 'Прожёр',
            val: 600.00
          }, {
            id: 2,
            name: 'Проезд',
            val: 575.50
          }
        ];
        console.log(this.compensation);
        ref = this.compensation;
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          rowData = ref[i];
          tbl.push(this.create_compensation_row(rowData));
        }
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>').append($('<button/>', {
          'html': "Добавить",
          click: function() {
            var html, win_inp_name, win_inp_val;
            html = $('<div/>', {
              id: 'user_window_compensations_form'
            });
            html.append($('<div/>').append(win_inp_name = $('<input/>', {
              placeholder: 'название'
            })));
            html.append($('<div/>').append(win_inp_val = $('<input/>', {
              placeholder: 'стоимость',
              val: round_money(0),
              focus: function() {
                var t;
                if (Number($(this).val()) === 0) {
                  return $(this).val('');
                } else {
                  t = $(this);
                  return setTimeout(function() {
                    return t.select();
                  }, 50);
                }
              },
              blur: function() {
                return $(this).val(round_money(Number($(this).val())));
              }
            })));
            return self.win_window = new modalWindow({
              html: html,
              maxHeight: '100%',
              maxWidth: '90%',
              title: 'Завести строку компенсации',
              buttons: [
                {
                  text: 'Закрыть',
                  "class": 'button_yes_or_no no',
                  click: function() {
                    console.log(self.win_window.winDiv[0]);
                    return $(self.win_window.winDiv[0]).dialog('close').dialog('destroy').remove();
                  }
                }, {
                  text: 'Создать',
                  "class": 'button_yes_or_no',
                  click: function() {
                    return new sendAjax('create_compensation_row', {
                      user_id: self.options.id,
                      name: win_inp_name.val(),
                      val: win_inp_val.val(),
                      url: 'http://' + window.location.hostname + '/os/?page=user_api'
                    }, function(response) {
                      tr.before(self.create_compensation_row(response.data));
                      return $(self.win_window.winDiv[0]).dialog('close').dialog('destroy').remove();
                    });
                  }
                }
              ]
            }, {
              closeOnEscape: true,
              single: true,
              close: function(event, ui) {
                return $('#quick_button_div .button').eq(1).removeClass('checked');
              }
            });
          }
        })));
        tr.append($('<td/>'));
        return tbl;
      };

      userOptions.prototype.salary_tbl = function() {
        var inp, self, tbl, tr;
        self = this;
        tbl = [];
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Выплаты на карту'
        }));
        tr.append($('<td/>'));
        tr.append($('<td/>'));
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Аванс'
        }));
        tr.append($('<td/>').append(inp = $('<input/>', {
          val: round_money(this.options.avans),
          focus: function() {
            var t;
            t = $(this);
            if (Number($(this).val()) === 0) {
              return $(this).val('');
            } else {
              return setTimeout(function() {
                return t.select();
              }, 50);
            }
          },
          blur: function() {
            if (Number($(this).val()) !== Number(self.options.avans)) {
              self.options.avans = round_money($(this).val());
              new sendAjax('save_avans', {
                id: self.options.id,
                val: self.options.avans,
                url: 'http://' + window.location.hostname + '/os/?page=user_api'
              });
              return $(this).val(self.options.avans);
            } else {
              return $(this).val(self.options.avans);
            }
          }
        })));
        tr.append($('<td/>'));
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'ЗП'
        }));
        tr.append($('<td/>').append($('<input/>', {
          val: round_money(this.options.salary),
          focus: function() {
            var t;
            t = $(this);
            if (Number($(this).val()) === 0) {
              return $(this).val('');
            } else {
              return setTimeout(function() {
                return t.select();
              }, 50);
            }
          },
          blur: function() {
            if (Number($(this).val()) !== Number(self.options.salary)) {
              self.options.salary = round_money($(this).val());
              $(this).val(self.options.salary);
              return new sendAjax('save_salary', {
                id: self.options.id,
                val: self.options.salary,
                url: 'http://' + window.location.hostname + '/os/?page=user_api'
              });
            } else {
              return $(this).val(self.options.salary);
            }
          }
        })));
        tr.append($('<td/>'));
        return tbl;
      };

      userOptions.prototype.general_tbl = function() {
        var inp, opt, sel, self, tbl, tr;
        self = this;
        tbl = [];
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Общие данные'
        }));
        tr.append($('<td/>'));
        tr.append($('<td/>'));
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Дата приёма на работу'
        }));
        tr.append($('<td/>').append(inp = $('<input/>', {
          type: 'text',
          val: this.options.date_start_wock,
          blur: function() {
            return new sendAjax('save_date_work_start', {
              id: self.options.id,
              date: $(this).val(),
              url: 'http://' + window.location.hostname + '/os/?page=user_api'
            });
          }
        })));
        inp.datetimepicker({
          timepicker: false,
          dayOfWeekStart: 1,
          onSelectDate: function(ct, $i) {
            return $i.blur();
          },
          onGenerate: function(ct) {
            $(this).find('.xdsoft_date.xdsoft_weekend').addClass('xdsoft_disabled');
            return $(this).find('.xdsoft_date');
          },
          closeOnDateSelect: true,
          format: 'd.m.Y'
        });
        tr.append($('<td/>'));
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Статус'
        }));
        tr.append($('<td/>').append(sel = $('<select/>')));
        sel.change(function() {
          return new sendAjax('save_status', {
            id: self.options.id,
            val: $(this).val(),
            url: 'http://' + window.location.hostname + '/os/?page=user_api'
          });
        });
        tr.append($('<td/>'));
        sel.append(opt = $('<option/>', {
          'value': '1',
          'html': 'Работает'
        }));
        if (Number(this.options.status) === 1) {
          opt.attr('selected', 'true');
        }
        sel.append(opt = $('<option/>', {
          'value': '0',
          'html': 'Уволен'
        }));
        if (Number(this.options.status) === 0) {
          opt.attr('selected', 'true');
        }
        tr.append($('<td/>'));
        tbl.push(tr = $('<tr/>'));
        tr.append($('<td/>', {
          html: 'Менеджер'
        }));
        tr.append($('<td/>').append(sel = $('<select/>')));
        sel.change(function() {
          return new sendAjax('save_manager_type', {
            id: self.options.id,
            val: $(this).val(),
            url: 'http://' + window.location.hostname + '/os/?page=user_api'
          });
        });
        sel.append(opt = $('<option/>', {
          'value': '1',
          'html': 'Рекламных агенств'
        }));
        if (Number(this.options.manager) === 1) {
          opt.attr('selected', 'true');
        }
        sel.append(opt = $('<option/>', {
          'value': '2',
          'html': 'конечных клиентов'
        }));
        if (Number(this.options.manager) === 2) {
          opt.attr('selected', 'true');
        }
        sel.append(opt = $('<option/>', {
          'value': '3',
          'html': 'бюджетник (исп/ср)'
        }));
        if (Number(this.options.manager) === 3) {
          opt.attr('selected', 'true');
        }
        tr.append($('<td/>'));
        return tbl;
      };

      return userOptions;

    })();
    return $.fn.extend({
      userOptions: function() {
        var args, option;
        option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
        return this.each(function() {
          var $this, data;
          $this = $(this);
          data = $this.data('userOptions');
          if (!data) {
            $this.data('userOptions', (data = new userOptions(this, option)));
          }
          if (typeof option === 'string') {
            return data[option].apply(data, args);
          }
        });
      }
    });
  })(window.jQuery, window);

}).call(this);

//# sourceMappingURL=userCard.js.map
